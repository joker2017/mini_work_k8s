name: Kubernetes Connection and Access Test

on:
  workflow_dispatch:

jobs:
  check-k8s-connection-and-access:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Install kubectl
        run: |
          curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
          chmod +x ./kubectl
          sudo mv ./kubectl /usr/local/bin/kubectl

      - name: Check Kubernetes Cluster Connection
        run: |
          echo "${{ secrets.KUBECONFIG }}" | kubectl --kubeconfig=/dev/stdin cluster-info

      - name: Get Nodes
        run: |
          echo "${{ secrets.KUBECONFIG }}" | kubectl --kubeconfig=/dev/stdin get nodes

      - name: Get namespaces
        run: |
          echo "${{ secrets.KUBECONFIG }}" | kubectl --kubeconfig=/dev/stdin get namespaces

      - name: Check Permissions to Create Pods
        run: |
          echo "${{ secrets.KUBECONFIG }}" | kubectl --kubeconfig=/dev/stdin auth can-i create pods --namespace default

      - name: Create Test Pod
        run: |
          echo "${{ secrets.KUBECONFIG }}" | kubectl --kubeconfig=/dev/stdin apply -f .github/workflows/your-pod-definition.yaml

      - name: Wait for Pod to be Ready in Loop
        run: |
          end=$((SECONDS+360)) # 120 seconds from now
          while [ $SECONDS -lt $end ]; do
            status=$(echo "${{ secrets.KUBECONFIG }}" | kubectl --kubeconfig=/dev/stdin get pod -l app=test-app -o jsonpath='{.items[*].status.phase}')
            if [[ $status == "Running" ]]; then
              echo "Pod is ready"
              break
            fi
            echo "Waiting for pod to be ready... Current status: $status"
            sleep 5
          done
          if [[ $status != "Running" ]]; then
            echo "Pod did not become ready in time"
            exit 1
          fi
        shell: /usr/bin/bash -e {0}

      - name: Delete Test Pod
        run: |
          echo "${{ secrets.KUBECONFIG }}" | kubectl --kubeconfig=/dev/stdin delete -f .github/workflows/your-pod-definition.yaml
