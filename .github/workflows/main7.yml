name: Kubernetes Connection and Access Test

on:
  workflow_dispatch:

jobs:
  check-k8s-connection-and-access:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Install kubectl
        run: |
          curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
          chmod +x ./kubectl
          sudo mv ./kubectl /usr/local/bin/kubectl

      - name: Check Kubernetes Cluster Connection
        run: |
          echo "${{ secrets.KUBECONFIG }}" | kubectl --kubeconfig=/dev/stdin cluster-info

      - name: Get Nodes
        run: |
          echo "${{ secrets.KUBECONFIG }}" | kubectl --kubeconfig=/dev/stdin get nodes

      - name: Get namespaces
        run: |
          echo "${{ secrets.KUBECONFIG }}" | kubectl --kubeconfig=/dev/stdin get namespaces

      - name: Check Permissions to Create Pods
        run: |
          echo "${{ secrets.KUBECONFIG }}" | kubectl --kubeconfig=/dev/stdin auth can-i create pods --namespace default

      - name: Create Test Pod
        run: |
          echo "${{ secrets.KUBECONFIG }}" | kubectl --kubeconfig=/dev/stdin apply -f .github/workflows/your-pod-definition.yaml

      - name: TEST!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        run: |
          echo "${{ secrets.KUBECONFIG }}" | kubectl --kubeconfig=/dev/stdin get configmap app-version -o=jsonpath='{.data.CURRENT_VERSION}' || echo ""
          
          
          

      - name: Wait for Pod to be Ready in Loop
        run: |
          end=$(date +%s) # current time
          timeout=$((end + 360)) # 6 minutes from now
          while [ $(date +%s) -lt $timeout ]; do
            statuses=$(echo "${{ secrets.KUBECONFIG }}" | kubectl --kubeconfig=/dev/stdin get pods -l app=test-app -o jsonpath='{.items[*].status.phase}')
            ready=true
            for status in $statuses; do
              if [[ "$status" != "Running" ]]; then
                ready=false
                break
              fi
            done
            if [ "$ready" = true ]; then
              echo "All pods are ready"
              break
            fi
            echo "Waiting for all pods to be ready... Current statuses: $statuses"
            sleep 5
          done
          if [ "$ready" != true ]; then
            echo "Not all pods became ready in time"
            exit 1
          fi
        shell: /usr/bin/bash -e {0}


      - name: Delete Test Pod
        run: |
          echo "${{ secrets.KUBECONFIG }}" | kubectl --kubeconfig=/dev/stdin delete -f .github/workflows/your-pod-definition.yaml
