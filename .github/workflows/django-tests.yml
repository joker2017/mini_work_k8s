name: Continuous Integration
on: [push]
jobs:
  test:
    runs-on: ubuntu-latest
    permissions:
      checks: write
      contents: read
    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
    #- name: PYTHONPATH
    #  run: export PYTHONPATH="/home/runner/work/mini_work_k8s/mini_work_k8s:$PYTHONPATH"
    - name: Setup Test Directories
      run: |
        echo "SRC_DIR=account/app/" >> $GITHUB_ENV
        echo "TESTS_DIR=account/app/account/tests/tests_test.py" >> $GITHUB_ENV



    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r account/requirements.txt
        pip install pytest-cov pytest-django
        sudo apt-get update && sudo apt-get install tree

    - name: Set PYTHONPATH
      run: echo "PYTHONPATH=$GITHUB_WORKSPACE" >> $GITHUB_ENV

    #- name: Set DJANGO_SETTINGS_MODULE
    #  run: echo "DJANGO_SETTINGS_MODULE=app.settings" >> $GITHUB_ENV

    #- name: Set PYTHONPATH
    #  run: echo "PYTHONPATH=$GITHUB_WORKSPACE" >> $GITHUB_ENV ,,,,,,

    - name: Run tests with coverage
      run: |
        
        tree
        pytest ${{ env.TESTS_DIR }} -vv --cov=${{ env.SRC_DIR }} --cov-report=xml

    - name: Generate unique filename for test results
      run: |
        echo "TEST_RESULTS_FILENAME=test-results-$(date +%s).xml" >> $GITHUB_ENV

    - name: Run tests and generate report
      run: |
        pwd
        pytest ${{ env.TESTS_DIR }} --junitxml=${{ env.TEST_RESULTS_FILENAME }}

    - name: Upload coverage reports to Codecov
      uses: codecov/codecov-action@v4.0.1
      env:
        token: ${{ secrets.CODECOV_TOKEN }}
        flags: unittests
        slug: joker2017/mini_work_k8s

    - name: Publish Test Results
      uses: EnricoMi/publish-unit-test-result-action@v2
      if: always()
      with:
        files: ${{ env.TEST_RESULTS_FILENAME }}
