name: Continuous Integration
on:
  push:
    branches-ignore:
      - main
  workflow_call:
  workflow_dispatch:
jobs:
  lint-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Helm
        uses: azure/setup-helm@v4.0.0
        with:
          version: '3.14.0'

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'
          check-latest: true

      - name: Set up chart-testing
        uses: helm/chart-testing-action@v2.6.0

      - name: Run chart-testing (list-changed)
        id: list-changed
        run: |
          changed=$(ct list-changed --target-branch ${{ github.event.repository.default_branch }})
          if [[ -n "$changed" ]]; then
            echo "changed=true" >> "$GITHUB_OUTPUT"
          else
            echo "changed=false" >> "$GITHUB_OUTPUT"
          fi

      - name: Run chart-testing (lint)
        if: steps.list-changed.outputs.changed == 'true'
        run: ct lint --target-branch ${{ github.event.repository.default_branch }}

      - name: Create kind cluster
        if: steps.list-changed.outputs.changed == 'true'
        uses: helm/kind-action@v1.8.0

      - name: Run chart-testing (install)
        if: steps.list-changed.outputs.changed == 'true'
        run: ct install --target-branch ${{ github.event.repository.default_branch }}
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - app: account
            TESTS_DIR: "account/app/account/tests/tests_test.py"
          - app: profile
            TESTS_DIR: "profile/app/user_profile/tests/tests_test.py"
    permissions:
      checks: write
      contents: read
    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r ${{ matrix.app }}/requirements.txt
        pip install pytest-cov pytest-django pytest-mock
        sudo apt-get update && sudo apt-get install tree

    - name: Set PYTHONPATH
      run: echo "PYTHONPATH=$GITHUB_WORKSPACE" >> $GITHUB_ENV

    - name: tree
      run: |
        tree

    - name: Run tests with coverage
      run: |
        pytest ${{ matrix.TESTS_DIR }} -vv --cov=api.calculator 
        #--cov-report=xml

    - name: Upload coverage reports to Codecov
      uses: codecov/codecov-action@v4
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        flags: ${{ matrix.app }}


