name: CI/CD with Blue-Green Deployment NEW

on:
  push:
    branches:
      - main
      - develop

jobs:
  lint-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Helm
        uses: azure/setup-helm@v4.0.0
        with:
          version: '3.14.0'

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'
          check-latest: true

      - name: Set up chart-testing
        uses: helm/chart-testing-action@v2.6.0

      - name: Run chart-testing (list-changed)
        id: list-changed
        run: |
          changed=$(ct list-changed --target-branch ${{ github.event.repository.default_branch }})
          if [[ -n "$changed" ]]; then
            echo "changed=true" >> "$GITHUB_OUTPUT"
          else
            echo "changed=false" >> "$GITHUB_OUTPUT"
          fi

      - name: Run chart-testing (lint)
        if: steps.list-changed.outputs.changed == 'true'
        run: ct lint --target-branch ${{ github.event.repository.default_branch }}

      - name: Create kind cluster
        if: steps.list-changed.outputs.changed == 'true'
        uses: helm/kind-action@v1.8.0

      - name: Run chart-testing (install)
        if: steps.list-changed.outputs.changed == 'true'
        run: ct install --target-branch ${{ github.event.repository.default_branch }}

  build-app:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        app: [account, profile]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./${{ matrix.app }}
          file: ./${{ matrix.app }}/Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/${{ matrix.app }}:${{ github.sha }}

  deploy-in-k8s:
    runs-on: ubuntu-latest
    needs: [build-app, lint-test]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Helm
        uses: azure/setup-helm@v4.0.0
        with:
          version: '3.14.0'

      - name: Install kubectl
        uses: azure/setup-kubectl@v3

      - name: Install Yandex Cloud CLI non-interactively
        run: |
          curl https://storage.yandexcloud.net/yandexcloud-yc/install.sh | bash -s -- -i $HOME/.yandex-cloud -n
          echo "$HOME/.yandex-cloud/bin" >> $GITHUB_PATH

      - name: Save Kubeconfig to File
        run: |
          echo "${{ secrets.KUBECONFIG }}" > kubeconfig.yml
          chmod 600 kubeconfig.yml

      - name: Install Argo Rollouts CLI
        run: |
          curl -LO https://github.com/argoproj/argo-rollouts/releases/latest/download/kubectl-argo-rollouts-linux-amd64
          chmod +x ./kubectl-argo-rollouts-linux-amd64
          sudo mv ./kubectl-argo-rollouts-linux-amd64 /usr/local/bin/kubectl-argo-rollouts
          kubectl-argo-rollouts version

      - name: Deploy to K8S
        run: |
          DATE=$(date +%Y%m%d-%H%M)
          COMMIT_SHA=$(echo $GITHUB_SHA | cut -c1-7)
          RELEASE_NAME="minibank-release-${DATE}-${COMMIT_SHA}"
          helm upgrade --install minibank-release ./.k8s/charts/ --set global.imageTag=${{ github.sha }} --namespace default --kubeconfig=kubeconfig.yml

      - name: Migrate and collectstatic profile
        uses: ./.github/actions/Django-k8s-M&C-Action
        with:
          apps: profile
          kubeconfig: kubeconfig.yml


      - name: Migrate and collectstatic account
        uses: ./.github/actions/Django-k8s-M&C-Action
        with:
          apps: account
          kubeconfig: kubeconfig.yml


      - name: Promote Rollout
        run: |
          kubectl-argo-rollouts promote account-rollout -n default --kubeconfig=kubeconfig.yml
          kubectl-argo-rollouts promote profile-rollout -n default --kubeconfig=kubeconfig.yml


