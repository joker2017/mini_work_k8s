#https://stackoverflow.com/questions/48076605/how-to-configure-nginx-with-multiple-docker-compose-yml-files
#Конфигурирование сети через nginx
version: '3.8'
services:


  account:
      build: depsemt2009/account:latest
      container_name: account
      networks:
       - nginx_network      # proxy and app must be in same network
       - db_network # you can use additional networks for some stuff"
      volumes:
         #- ./account/app:/app
         #- media2_volume:/vol/web/media
         - static_volume:/vol/web/static
      command: gunicorn app.wsgi:application --bind 0.0.0.0:8001 --workers 3 -t 0

      #entrypoint: chown -R 666 /app/account/migrations
      #command: python manage.py runserver 0.0.0.0:8001
      depends_on:
        - pgdb
      env_file: .env
      environment:
        - DEBUG=TRUE  #только в режиме разработки
        - DJANGO_SUPERUSER_USERNAME=admin
        - DJANGO_SUPERUSER_PASSWORD=admin
        - DJANGO_SUPERUSER_EMAIL=admin@example.com


  profile:
      build: depsemt2009/profile:latest
      container_name: profile
      networks:
       - nginx_network      # proxy and app must be in same network
       - db_network # you can use additional networks for some stuff"
      volumes:
         #- ./profile/app:/app
         #- media_volume:/vol/web/media
         - static_volume:/vol/web/static
      command: gunicorn app.wsgi:application --bind 0.0.0.0:8002 --workers 3 -t 0
      #command: python manage.py runserver 0.0.0.0:8002
      depends_on:
        - pgdb
      env_file: .env
      environment:
        - DEBUG=TRUE  #только в режиме разработки
        - DJANGO_SUPERUSER_USERNAME=admin
        - DJANGO_SUPERUSER_PASSWORD=admin
        - DJANGO_SUPERUSER_EMAIL=admin@example.com

  pgdb:
      image: postgres:14
      container_name: pgdb
      # Задание переменных окружения для контейнера с postgres
      environment:
         - POSTGRES_PASSWORD=postgres
      networks:
         - db_network 
      #entrypoint: chown -R 999:999 /var/lib/postgresql/data
      # you can use additional networks for some stuff"
      
      # Связывание тома с директорией в контейнере для сохранения данных postgres
      volumes:
         - postgres_data:/var/lib/postgresql/data/
      ports:
        - 5432:5432
      


  pgadmin:
    container_name: pgadmin_container
    image: dpage/pgadmin4:7.2
    environment:
      PGADMIN_DEFAULT_EMAIL: "habrpguser@habr.com"
      PGADMIN_DEFAULT_PASSWORD: "pgadminpwd4habr"
      PGADMIN_CONFIG_SERVER_MODE: "False"
    volumes:
      - pgadmin-data:/var/lib/pgadmin
    ports:
      - "5050:80"
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 1G
    networks:
         - db_network

  nginx:
    build: ./nginx
    container_name: nginx
    ports:
      - 8002:80
      - 8001:80

    volumes:
      #- ./nginx/nginx.conf:/etc/nginx/nginx.conf
      #- ./nginx/nginx.conf:/etc/nginx/nginx.conf
      #- ./project/static:/var/www/html/static
      #- ./minibank/nginx/conf.d:/etc/nginx/conf.d
      #- media_volume:/vol/web/static:/var/www/html/static
      #-  /vol/web/static:/var/www/html/static
      #- media_volume:/etc/nginx/html/profile/static/
      - static_volume:/var/www/html/static/
      #- media2_volume:/etc/nginx/html/account/media/
      #- static2_volume:/etc/nginx/html/account/static/
    depends_on:
      - account
      - profile
    networks:
      - nginx_network

networks:
  nginx_network:
    driver: bridge
  db_network:
    driver: bridge

volumes:
  postgres_data: #null
  static_volume:  # <-- declare the static volume
  media_volume:  # <-- declare the media volume
  static2_volume:  # <-- declare the static volume
  media2_volume:

  habrdb-data:
  pgadmin-data:


